PICO Test assignment
ciaranmaher@gmail.common
[ec2-user@ip-172-31-39-226 ~]$ python3 --version
Python 3.9.2
[ec2-user@ip-172-31-39-226 ~]$ git --version
git version 2.27.0
Successfully installed xmltodict-0.12.0
[ec2-user@ip-172-31-39-226 pico]$



Convert JUNIT xml to Elastisearch consumable JSON

Create a base dict object with the values from the junit xml_file
Foreach case element in the dict, create a new json file with the relevant info

{
   "job_number": "integer",
   "brand": "string",
   "revision": "integer",
   "runtype": "string",
   "category": "string",
   "job_name": "string",
   "file": "string",
   "name": "string",
   "timestamp": "timestamp",
   "classname": "string",
   "testname": "string",
   "duration": "numeric",
   "skipped": "boolean",
   "passed": "boolean",
   "starttime": "timestamp",
   "stdout": "string",
   "stderr": "string",
   "id": "string"
}

id - a unique id based on the testcase. This ID should be reproducible

xml to string object

calculate derived data

create string array of imported xml objects

print string array to json object


open an xml file
xml file to string objects
open properties file
property file to string object

reformat xml string object to build correct layout
add reformatted xml string object to json builder
add property string object to json builder
generate unique id (must be reproducible based on given values)
add id to json builder

dump json to file writer


Handle output type - done
  To folder or to stdout
  check output folder already exists
Handle single suite use-case - done
Fix bug with os.walk combining the wrong properties with each xml - done
  It's using the previous properties with the next xml as it reads the xml first
Include the errorStackTrace if test failed/errored. - done
Remove target folder from job_number to only include number - done
Calculate unique reproducible ID - done

calculate the duration of each test
add comments


ensure that the json is searchable and valid for loading into elasticsearch


type enforcement
  ensure that xml input file is valid

refactor to use methods
refactor to use classes
